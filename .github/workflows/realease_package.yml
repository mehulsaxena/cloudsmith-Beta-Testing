name: Publish Python Package

on:
  workflow_run:
    workflows: ["Build Python Package"]
    types:
      - completed
    branches:
      - master

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_REPOSITORY: "staging"
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}

permissions:
  id-token: write  # ✅ Required for OIDC Authentication
  contents: read   # ✅ Required for actions/checkout

jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package
          path: dist

      - name: List directory contents
        run: ls -la dist/
        shell: bash

      - name: Authenticate with Cloudsmith (OIDC)
        id: auth
        run: |
          # Request the GitHub OIDC token
          oidc_token=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://AzureADTokenExchange" | jq -r '.value')

          # Exchange the OIDC token for a Cloudsmith token
          cloudsmith_token=$(curl -X POST -H "Content-Type: application/json" \
            -d "{\"oidc_token\":\"$oidc_token\", \"service_slug\":\"${{ env.CLOUDSMITH_SERVICE_SLUG }}\"}" \
            https://api.cloudsmith.io/openid/${{ env.CLOUDSMITH_NAMESPACE }}/ | jq -r '.token')

          # Store the Cloudsmith token as an environment variable
          echo "CLOUDSMITH_API_KEY=$cloudsmith_token" >> $GITHUB_ENV

      - name: Push Package to Cloudsmith
        run: |
          cloudsmith push python \
            ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_REPOSITORY }} \
            dist/*
        env:
          CLOUDSMITH_API_KEY: ${{ env.CLOUDSMITH_API_KEY }}